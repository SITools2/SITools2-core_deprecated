<!--
==============================================================================
=== Build file to allow ant (http://jakarta.apache.org/ant/) to be used
=== to build the Sitools project.
===
=== Author : AKKA Technologies
===
=== name    : nom du projet
===	default : tache ant executee par defaut
===	basedir : repertoire courant lors de l'execution des taches ant
===
==============================================================================
-->
<project name="fr.cnes.sitools.build" default="build" basedir=".">


	<!-- Chargement du build.properties ( contient le HOST ) -->
	<property file="build.properties" prefix="sitools" />
	<property name="ant-svn.dir" value="lib"/>
	<property name="repos.new.url" value="${sitools.Svn.tags.url}/${sitools.Version.tag}"/>
	<property name="repos.ref.url" value="${sitools.Svn.branches.url}/${sitools.Version.reference}"/>
	<property name="repos.new.tag" value="${sitools.Version.tag}"/>
	<property name="repos.ref.tag" value="${sitools.Version.reference}"/>
	<property name="repos.new.revision" value="${sitools.Revision.current}"/>
	<property name="repos.ref.revision" value="${sitools.Revision.reference}"/>

	<!-- Initialization of SVN-ant libraries -->
	<path id="path.svnant">
		<pathelement location="${ant-svn.dir}/svnant.jar"/>
		<pathelement location="${ant-svn.dir}/javahl_1.7.5.1.jar"/>
		<!-- 		<pathelement location="${ant-svn.dir}/svnkit_1.7.5.jar"/> -->
		<!-- 		<pathelement location="${ant-svn.dir}/ganymed.jar"/> -->
		<pathelement location="${ant-svn.dir}/svnClientAdapter.jar"/>
	</path>
	<typedef resource="org/tigris/subversion/svnant/svnantlib.xml" classpathref="path.svnant"/>

	<!-- Creating distribution folder from tag -->
	<property name="distribution.dir" value="DISTRIBUTION-${repos.new.tag}"/>



	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		MAIN Target 
	+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<target name="build" depends="init, export, izpack, javadoc, file-list, tar-gz, checksum" description="Création d'une distribution" />

	<target name="build-git" depends="export-git, izpack, javadoc, file-list-git, tar-gz, checksum" description="Création d'une distribution" />



	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		Target for init before export
	+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<target name="init" description="Initiatialisation de la creation de la distribution" >
		<echo message="preparing folders ..."/>
		<delete dir="${distribution.dir}"/>
		<mkdir dir="${distribution.dir}"/>
		<mkdir dir="${distribution.dir}/cots"/>
		<mkdir dir="${distribution.dir}/data"/>
		<mkdir dir="${distribution.dir}/database"/>
		<mkdir dir="${distribution.dir}/workspace"/>
	</target>

	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		Target for init before import/ Basicaly remove some files that we don't want to be commited
	+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<target name="init-import" description="Initiatialisation avant l'import sur sourceforge" >
		<delete>
			<fileset 
				dir="${distribution.dir}"
				includesfile="list_files_to_delete_before_import.properties" />
		</delete>
	</target>

	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		Target for SVN export 
	+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<target name="export" depends="init" description="Tache SVN d exportation du la version actuelle">
		<svnSetting
	          username="${sitools.username}"
	          password="${sitools.password}"
	          id="svn.settings"
			  client="javahl"
	      />
		<!-- Export part -->
		<echo message="cots export started ...${sitools.username}"/>
		<svn refid="svn.settings">
			<export
				srcUrl="${repos.new.url}/cots"
				destPath="${distribution.dir}/cots"
				force="true"
				revision="${repos.new.revision}"/>
		</svn>
		<echo message="cots exported"/>
		<echo message="data export started ..."/>
		<svn refid="svn.settings">
			<export
				srcUrl="${repos.new.url}/data"
				destPath="${distribution.dir}/data"
				force="true"
				revision="${repos.new.revision}"
			/>
		</svn>
		<echo message="data exported"/>
		<echo message="database export started ..."/>
		<svn refid="svn.settings">
			<export
				srcUrl="${repos.new.url}/database"
				destPath="${distribution.dir}/database"
				force="true"
				revision="${repos.new.revision}"
			/>
		</svn>
		<echo message="database exported"/>
		<echo message="workspace export started ..."/>
		<svn refid="svn.settings">
			<export
				srcUrl="${repos.new.url}/workspace"
				destPath="${distribution.dir}/workspace"
				force="true"
				revision="${repos.new.revision}"
			/>
		</svn>
		<echo message="workspace exported"/>
		<echo message="SVN export from branch/tag ${repos.new.revision} done"/>

	</target>
	
	<target name="export-git" description="Tache GIT d'export de la version actuelle">
		<exec executable="scripts/clone-tag.bat" osfamily="windows">
			<arg value="${sitools.git.repository.url}"/>
			<arg value="${distribution.dir}"/>
			<arg value="${sitools.project.tag}"/>
		</exec>
		
		<exec executable="scripts/clone-tag.sh" osfamily="unix">
			<arg value="${sitools.git.repository.url}"/>
			<arg value="${distribution.dir}"/>
			<arg value="${sitools.project.tag}"/>
		</exec>
		
	</target>


	<target name="import-all" depends="init-import"
		description="Tache SVN de déploiement de la version actuelle sur Sourceforge">

		<echo message="Import of Sitools2 to the sourceforge repository">
		</echo>
		<echo message="Repository : ${sitools.sourceforge.url}"  >
		</echo>
		<echo message="Username : ${sitools.sourceforge.username}"  >
		</echo>
		<echo message="Starting ...."  >
		</echo>

		<svnSetting 
			username="${sitools.sourceforge.username}"
			password="${sitools.sourceforge.password}"
			id="svn.settings" 
			client="javahl"
		/>
		<!-- DATA -->
		<echo message="data import started ...${sitools.sourceforge.username}" />
		<svn refid="svn.settings">
			<import url="${sitools.sourceforge.url}/data" path="${distribution.dir}/data"
				message="Import of data version ${sitools.project.tag}" />
		</svn>
		<echo message="data imported" />

		<!-- DATABASE -->
		<echo message="database import started ...${sitools.sourceforge.username}" />
		<svn refid="svn.settings">
			<import url="${sitools.sourceforge.url}/database" path="${distribution.dir}/database"
				message="Import of database version ${sitools.project.tag}" />
		</svn>
		<echo message="database imported" />

		<!-- COTS -->
		<echo message="cots import started ...${sitools.sourceforge.username}"/>
		<svn refid="svn.settings">
			<import
				url="${sitools.sourceforge.url}/cots"
				path="${distribution.dir}/cots"
				message="Import of cots version ${sitools.project.tag}"/>
		</svn>
		<echo message="cots imported"/>

		<!-- WORKSPACE -->
		<echo message="workspace import started ...${sitools.sourceforge.username}"/>
		<svn refid="svn.settings">
			<import
				url="${sitools.sourceforge.url}/workspace"
				path="${distribution.dir}/workspace"
				message="Import of workspace version ${sitools.project.tag}"/>
		</svn>
		<echo message="workspace imported"/>
	</target>


	<!-- TARGET FOR DATA ONLY -->
	<target name="import-data" depends="init-import"
		description="Tache SVN de déploiement du dossier data de la version actuelle sur Sourceforge">

		<echo message="Import of Sitools2 to the sourceforge repository">
		</echo>
		<echo message="Repository : ${sitools.sourceforge.url}"  >
		</echo>
		<echo message="Username : ${sitools.sourceforge.username}"  >
		</echo>
		<echo message="Starting ...."  >
		</echo>

		<svnSetting 
			username="${sitools.sourceforge.username}"
			password="${sitools.sourceforge.password}"
			id="svn.settings" 
			client="javahl"
		/>
		<!-- DATA -->
		<echo message="data import started ...${sitools.sourceforge.username}" />
		<svn refid="svn.settings">
			<import url="${sitools.sourceforge.url}/data" path="${distribution.dir}/data"
				message="Import of data version ${sitools.project.tag}" />
		</svn>
		<echo message="data imported" />
	</target>

	<!-- TARGET FOR DATABASE ONLY -->
	<target name="import-database" depends="init-import"
		description="Tache SVN de déploiement du dossier database de la version actuelle sur Sourceforge">

		<echo message="Import of Sitools2 to the sourceforge repository">
		</echo>
		<echo message="Repository : ${sitools.sourceforge.url}"  >
		</echo>
		<echo message="Username : ${sitools.sourceforge.username}"  >
		</echo>
		<echo message="Starting ...."  >
		</echo>

		<svnSetting 
			username="${sitools.sourceforge.username}"
			password="${sitools.sourceforge.password}"
			id="svn.settings"
			client="javahl"
		/>

		<!-- DATABASE -->
		<echo message="database import started ...${sitools.sourceforge.username}" />
		<svn refid="svn.settings">
			<import url="${sitools.sourceforge.url}/database" path="${distribution.dir}/database"
				message="Import of database version ${sitools.project.tag}" />
		</svn>
		<echo message="database imported" />
	</target>


	<!-- TARGET FOR COTS ONLY -->
	<target name="import-cots" depends="init-import"
		description="Tache SVN de déploiement du dossier cots de la version actuelle sur Sourceforge">

		<echo message="Import of Sitools2 to the sourceforge repository">
		</echo>
		<echo message="Repository : ${sitools.sourceforge.url}"  >
		</echo>
		<echo message="Username : ${sitools.sourceforge.username}"  >
		</echo>
		<echo message="Starting ...."  >
		</echo>

		<svnSetting 
			username="${sitools.sourceforge.username}"
			password="${sitools.sourceforge.password}"
			id="svn.settings"
			client="javahl"
		/>

		<!-- COTS -->
		<echo message="cots import started ...${sitools.sourceforge.username}"/>
		<svn refid="svn.settings">
			<import
				url="${sitools.sourceforge.url}/cots"
				path="${distribution.dir}/cots"
				message="Import of cots version ${sitools.project.tag}"/>
		</svn>
		<echo message="cots imported"/>
	</target>

	<!-- TARGET FOR WORKSPACE ONLY -->
	<target name="import-workspace" depends="init-import"
		description="Tache SVN de déploiement du dossier workspace de la version actuelle sur Sourceforge">

		<echo message="Import of Sitools2 to the sourceforge repository">
		</echo>
		<echo message="Repository : ${sitools.sourceforge.url}"  >
		</echo>
		<echo message="Username : ${sitools.sourceforge.username}"  >
		</echo>
		<echo message="Starting ...."  >
		</echo>

		<svnSetting 
			username="${sitools.sourceforge.username}"
			password="${sitools.sourceforge.password}"
			id="svn.settings"
			client="javahl"
		/>

		<!-- WORKSPACE -->
		<echo message="workspace import started ...${sitools.sourceforge.username}"/>
		<svn refid="svn.settings">
			<import
				url="${sitools.sourceforge.url}/workspace"
				path="${distribution.dir}/workspace"
				message="Import of workspace version ${sitools.project.tag}"/>
		</svn>
		<echo message="workspace imported"/>
	</target>



	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		Targets for IzPack 
	+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<target name="izpack" depends="izpack-init, izpack-compile-core, izpack-compile-extension, izpack-compile, izpack-finish" description="Generate izpack"/>

	<target name="izpack-init" description="Generate izpack file : prepare">
		<!-- Creating temporary folder for compilation -->
		<delete dir="tmp"/>
		<mkdir dir="tmp/cots"/>
		<mkdir dir="tmp/data"/>
		<mkdir dir="tmp/database"/>
		<mkdir dir="tmp/workspace"/>
		<!-- Copying needed projects and resources -->
		<copy todir="tmp/cots">
			<fileset dir="${distribution.dir}/cots"/>
		</copy>
		<copy todir="tmp/data">
			<fileset dir="${distribution.dir}/data"/>
		</copy>
		<copy todir="tmp/database">
			<fileset dir="${distribution.dir}/database"/>
		</copy>
		<copy todir="tmp/workspace">
			<fileset 
				dir="${distribution.dir}/workspace" 
				excludes="**/fr.cnes.sitools.s*/** **/sitools-build/** **/sitools-t*/** **/tools/**"/>
		</copy>
	</target>

	<target name="izpack-compile-core" description="Generate izpack file : compile core">
		<subant target="build" buildpath="./tmp/workspace/fr.cnes.sitools.core/">
			<property name="ROOT_DIRECTORY" value="${sitools.ROOT_DIRECTORY}"/>
		</subant>
	</target>

	<target name="izpack-compile-extension" description="Generate izpack file : compile extension">
		<subant target="build-extensions" buildpath="./tmp/workspace/fr.cnes.sitools.extensions/">
			<property name="ROOT_DIRECTORY" value="${sitools.ROOT_DIRECTORY}"/>
		</subant>
	</target>

	<target name="izpack-compile" description="Generate izpack file : compile">
		<subant  target="build" buildpath="./tmp/workspace/sitools-install-izpack/">
			<property name="ROOT_DIRECTORY_LOCAL" value="${sitools.ROOT_DIRECTORY}/workspace/sitools-build/tmp"/>
			<property name="properties.Starter.VERSION" value="${sitools.project.tag}"/>
		</subant>
	</target>

	<target name="izpack-finish" description="Generate izpack file : copy">
		<copy todir="./files/">
			<fileset dir="./tmp/workspace/sitools-install-izpack/">
				<include name="*.jar"/>
			</fileset>
		</copy>
	</target>


	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		Target for file lists and README.txt 
	+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<target name="file-list" description="Genere la liste des fichiers, le README et la liste des fichiers A/M/D">
		<svnSetting
	          username="${sitools.username}"
	          password="${sitools.password}"
	          id="svn.settings"
	          client="javahl"
	      />
		<echo message="moving files to ${distribution.dir}"/>
		<copy todir="${distribution.dir}">
			<fileset dir="files" includes="**/*.txt **/*.jar">
			</fileset>
		</copy>
		<delete dir="files" includes="**/*.jar"/>

		<svn refid="svn.settings">
			<!-- if new is on the trunk; else 
				newUrl="${sitools.Svn.tags.url}/${sitools.Version.tag}"
				 -->
			<DiffSummarizeSitoolsForCNES 
				oldUrl="${repos.ref.url}"
				newUrl="${repos.new.url}"
				oldTargetRevision="${repos.ref.revision}"
				newTargetRevision="${repos.new.revision}"
				outFile="${distribution.dir}/list-diff.txt"
			/>
		</svn>

		<delete file="${distribution.dir}/list-diff.txt"/>

		<path id="list.files">
			<fileset dir="${distribution.dir}">
				<include name="**/*.*"/>
			</fileset>
		</path>
		<property name="files" refid="list.files"/>
		<pathconvert property="list" refid="list.files" pathsep="&#x0A;">
			<mapper>
				<globmapper from='${sitools.ROOT_DIRECTORY}/*' to="*" handledirsep="true"/>
			</mapper>
		</pathconvert>
		<echo message="Files : &#x0A;${list}" append="true" file="${distribution.dir}/list-file.txt"/>

	</target>
	
	
	<target name="file-list-git" description="Genere la liste des fichiers, le README et la liste des fichiers A/M/D">
			<exec executable="scripts/diff-files.bat" osfamily="windows">
				<arg value="${sitools.Version.reference}"/>
				<arg value="${sitools.Version.tag}"/>
				<arg value="${distribution.dir}"/>
			</exec>
			
			<exec executable="scripts/diff-files.sh" osfamily="unix">
				<arg value="${sitools.Version.reference}"/>
				<arg value="${sitools.Version.tag}"/>
				<arg value="${distribution.dir}"/>
			</exec>
			
		</target>

	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		Target for archive creation
	+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<target name="tar-gz" description="Genere l archive">
		<!-- Creating archive -->
		<property name="archive.path" value="${distribution.dir}/${sitools.project.title}-${sitools.project.tag}.tar.gz"/>
		<echo message="generating archive ${archive.path}"/>
		<tar destfile="${archive.path}" compression="gzip">
			<fileset dir="${distribution.dir}">
				<exclude name="**/documentation/javadoc/**"/>
			</fileset>
		</tar>
	</target>



	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
		Target for MD5
	+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<target name="checksum" description="Genere le MD5 de l archive">

		<!-- Generating MD5 checksum -->
		<echo message="generating MD5 ..."/>
		<checksum forceOverwrite="yes" algorithm="MD5" todir="${distribution.dir}">
			<fileset dir="${distribution.dir}">
				<include name="${sitools.project.title}-${sitools.project.tag}.tar.gz"/>
			</fileset>
		</checksum>

		<!-- Check MD5 generated -->
		<echo message="verifying MD5 ..."/>
		<checksum algorithm="MD5" todir="${distribution.dir}" verifyProperty="isMD5ok">
			<fileset dir="${distribution.dir}">
				<include name="${sitools.project.title}-${sitools.project.tag}.tar.gz"/>
			</fileset>
		</checksum>
	</target>


	<path id="javadoc">
		<pathelement location="${distribution.dir}/workspace/fr.cnes.sitools.core/src"/>
		<pathelement location="${distribution.dir}/workspace/fr.cnes.sitools.extensions/src"/>
		<pathelement location="${distribution.dir}/workspace/libraries/javax.measure_0.9.5/src"/>
	</path>

	<!-- Target for Javadoc -->
	<target name="javadoc" description="Target to create javadoc">
		<mkdir dir="${distribution.dir}/documentation"/>
		<mkdir dir="${distribution.dir}/documentation/javadoc"/>
		<javadoc 
			destdir="${distribution.dir}/documentation/javadoc"
			packagenames="fr.cnes.sitools.*"
			sourcepathref="javadoc"
			author="true"
			public="true"
			version="true" use="true" windowtitle="${project.fullname} ${project.version}"
			doctitle="${project.fullname} ${project.version}"
			bottom="Copyright &amp;copy; ${year} ${owner}. All Rights Reserved.">
			<classpath>
				<path>
					<fileset dir="${distribution.dir}/cots/restlet-2.0.5-patched">
						<include name="**/*.jar"/>
					</fileset>
				</path>
				<path>
					<fileset dir="${distribution.dir}/workspace/libraries">
						<include name="**/*.jar"/>
					</fileset>
				</path>
				<path>
					<fileset dir="${distribution.dir}/workspace/org.restlet.ext.solr">
						<include name="**/*.jar"/>
					</fileset>
				</path>
			</classpath>
		</javadoc>
	</target>

	<target name="changeVersion" description="Change the version in all the Sitools files">
		<echo message="Replace ${sitools.project.tag.old} with ${sitools.project.tag}">
		</echo>
		<replace 
    		dir="../.."
    		value="${sitools.project.tag}"
    		failOnNoReplacements="true"
    		includesfile="list_files_for_version.properties"    			
    		summary="true"
    		encoding="ISO-8859-1">
			<!-- exemple : Starter.VERSION=0.9.1RC -->
			<replacefilter 
    			token="Starter.VERSION=${sitools.project.tag.old}"
    			value="Starter.VERSION=${sitools.project.tag}"/>
			<!-- exemple : <property name="project.tag"         value="0.9.1RC" />	-->
			<replacefilter 
    			token="&lt;property name=&quot;project.version&quot;         value=&quot;${sitools.project.tag.old}&quot;/&gt;"
    			value="&lt;property name=&quot;project.version&quot;         value=&quot;${sitools.project.tag}&quot;/&gt;"/>
			<!-- exemple : <property name="project.tag" value="0.9.1RC" />	(with only one space)-->
			<replacefilter 
	   			token="&lt;property name=&quot;project.version&quot; value=&quot;${sitools.project.tag.old}&quot;/&gt;"
    			value="&lt;property name=&quot;project.version&quot; value=&quot;${sitools.project.tag}&quot;/&gt;"/>
			<!-- exemple : <appversion>0.9.1RC</appversion> -->
			<replacefilter 
    			token="&lt;appversion&gt;${sitools.project.tag.old}&lt;/appversion&gt;"
    			value="&lt;appversion&gt;${sitools.project.tag}&lt;/appversion&gt;"/>
			<!-- exemple : sonar.projectVersion=0.9.5 -->
			<replacefilter 
    			token="sonar.projectVersion=${sitools.project.tag.old}"
    			value="sonar.projectVersion=${sitools.project.tag}"/>
		</replace>
	</target>

</project>
